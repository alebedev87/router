# -*- mode: makefile -*-

export GOOS=linux

REGISTRY ?= quay.io
IMAGE ?= openshift/openshift-router
IMAGE_BASE ?= openshift/openshift-router-base
TAG ?= latest
IMAGEBUILDER ?= podman

new-openshift-router-image:
	GO111MODULE=on CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o openshift-router -gcflags=all="-N -l" ./cmd/openshift-router
	$(IMAGEBUILDER) build -t $(IMAGE):$(TAG) -f hack/Dockerfile.debug .

new-ci-router-image:
	$(IMAGEBUILDER) build -t $(IMAGE_BASE):$(TAG) -f images/router/base/Dockerfile.ocp .
	cp -f images/router/haproxy/Dockerfile.ocp images/router/haproxy/Dockerfile.ocp.tmp
	sed -i "s|FROM .*|FROM $(IMAGE_BASE):$(TAG)|" images/router/haproxy/Dockerfile.ocp.tmp
	$(IMAGEBUILDER) build -t $(IMAGE):$(TAG) -f images/router/haproxy/Dockerfile.ocp.tmp .

push:
	$(IMAGEBUILDER) tag $(IMAGE):$(TAG) $(REGISTRY)/$(IMAGE):$(TAG)
	$(IMAGEBUILDER) push $(REGISTRY)/$(IMAGE):$(TAG)

set-image:
	oc scale --replicas 0 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 0 -n openshift-ingress-operator deployments ingress-operator
	oc -n openshift-ingress scale deployment --replicas=0 router-default
	oc -n openshift-ingress patch deployment router-default -p '{"spec":{"template":{"spec":{"$$setElementOrder/containers":[{"name":"router"}],"containers":[{"imagePullPolicy":"Always","name":"router"}]}}}}'
	oc -n openshift-ingress set image deployment/router-default router=$(REGISTRY)/$(IMAGE):$(TAG)
	oc -n openshift-ingress scale deployment --replicas=1 router-default

dwim:  new-openshift-router-image push set-image

reset:
	oc scale --replicas 1 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 1 -n openshift-ingress-operator deployments ingress-operator
